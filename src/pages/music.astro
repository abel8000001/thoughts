---
import { getCollection, type CollectionEntry } from "astro:content";
import BaseLayout from "../layouts/BaseLayout.astro";
import "../styles/music.css";

const rawAlbums = (await getCollection("music")) as CollectionEntry<"music">[];

const coverModules = import.meta.glob("../content/music/*/cover.jpg", {
    eager: true,
    query: "?url",
    import: "default",
}) as Record<string, string>;
const coverByFolder: Record<string, string> = {};
for (const p in coverModules) {
    const m = p.match(/content\/music\/(.+?)\/cover\.jpg$/);
    if (m) coverByFolder[m[1]] = coverModules[p];
}

const albums = await Promise.all(
    rawAlbums.map(async (album) => {
        const folder = album.id.split("/")[0];
        let resolvedCover = coverByFolder[folder];

        return { ...album, folder, resolvedCover };
    }),
);

// Sort albums by title (case-insensitive)
albums.sort((a, b) =>
    a.data.title.localeCompare(b.data.title, undefined, {
        sensitivity: "base",
    }),
);
---

<BaseLayout>
    <div id="music">
        <h1 id="albums-title">Albums</h1>
        <ul id="album-grid">
            {
                albums.map((album) => (
                    <li class="album-item">
                        <a href={`/thoughts/music/${album.folder}/`}>
                            {album.resolvedCover && (
                                <img
                                    class="album-cover"
                                    src={album.resolvedCover}
                                    alt={`${album.data.title} cover`}
                                    width="100"
                                />
                            )}
                            <p>{album.data.title}</p>
                        </a>
                    </li>
                ))
            }
        </ul>
        <p id="more-on-the-way-message">don't worry, (many) more on the way</p>
    </div>
</BaseLayout>
